{
  "id$": "TestcafeBuilderOptions",
  "title": "TestCafe builder",
  "description": "TestCafe builder options",
  "type": "object",
  "properties": {
    "assertionTimeout": {
      "type": "number",
      "description": "[TestCafe] set the amount of time within which assertion should pass"
    },
    "ajaxRequestTimeout": {
      "type": "number",
      "description": "[TestCafe] set the amount of time within which Fetch/XHR request should receive a response"
    },
    "browserInitTimeout": {
      "type": "number",
      "description": "[TestCafe] set the amount of time within which browsers should connect to TestCafe"
    },
    "browsers": {
      "type": "array",
      "description": "[TestCafe] browsers to run the tests on",
      "items": {
        "type": "string",
        "description": "name of the browser including arguments"
      },
      "default": ["chrome"]
    },
    "clientScripts": {
      "description": "[TestCafe] Scripts to inject into the tested pages",
      "oneOf": [
        {
          "type": "string",
          "description": "Script to inject into the tested pages"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Scripts to inject into the tested pages"
          }
        }
      ]
    },
    "color": {
      "type": "boolean",
      "description": "[TestCafe] force colors in command line"
    },
    "concurrency": {
      "type": "number",
      "description": "[TestCafe] number of concurrent browser instances to run"
    },
    "debugMode": {
      "type": "boolean",
      "description": "[TestCafe] execute test steps one by one pausing the test after each step"
    },
    "debugOnFail": {
      "type": "boolean",
      "description": "[TestCafe] pause the test if it fails"
    },
    "dev": {
      "type": "boolean",
      "description": "[TestCafe] enables mechanisms to log and diagnose errors"
    },
    "devServerTarget": {
      "type": "string",
      "description": "[Angular] Dev server target to run tests against."
    },
    "disableMultipleWindows": {
      "type": "boolean",
      "description": "[TestCafe] disable separate browser windows during tests"
    },
    "disableNativeAutomation": {
      "type": "boolean",
      "description": "[TestCafe] disable native automation in favor of the TestCafe proxy"
    },
    "disablePageCaching": {
      "type": "boolean",
      "description": "[TestCafe] disable caching of page content"
    },
    "disablePageReloads": {
      "type": "boolean",
      "description": "[TestCafe] disable page reloads between tests"
    },
    "disableScreenshots": {
      "type": "boolean",
      "description": "[TestCafe] disable screenshots"
    },
    "disableTestSyntaxValidation": {
      "type": "boolean",
      "description": "[TestCafe] disables checks for 'test' and 'fixture' directives to run dynamically loaded tests"
    },
    "fixture": {
      "type": "string",
      "description": "[TestCafe] run only fixtures with the specified name"
    },
    "fixtureGrep": {
      "type": "string",
      "description": "[TestCafe] run only fixtures matching the specified pattern"
    },
    "fixtureMeta": {
      "type": "object",
      "description": "[TestCafe] run only fixtures with matching metadata"
    },
    "host": {
      "type": "string",
      "description": "[TestCafe] Host to use to run TestCafe on (only if devServerTarget is not set), default = localhost",
      "default": "localhost"
    },
    "live": {
      "type": "boolean",
      "description": "Enables live mode. In this mode, TestCafe watches for changes you make in the test files and all files referenced in them (like page objects or helper modules). These changes immediately restart the tests so that you can see the effect.",
      "default": false
    },
    "NoColor": {
      "type": "boolean",
      "description": "[TestCafe] disable colors in command line"
    },
    "pageLoadTimeout": {
      "type": "number",
      "description": "[TestCafe] set the amount of time within which TestCafe waits for the `window.load` event to fire on page load before proceeding to the next test action"
    },
    "pageRequestTimeout": {
      "type": "number",
      "description": "[TestCafe] set the timeout to wait for HTML pages"
    },
    "ports": {
      "type": "array",
      "description": "[TestCafe] the ports to run TestCafe on",
      "items": {
        "type": "number",
        "description": ""
      }
    },
    "proxy": {
      "type": "string",
      "description": "[TestCafe] specify the host of the proxy server"
    },
    "proxyBypass": {
      "type": "array",
      "description": "[TestCafe] specify a comma-separated list of rules that define URLs accessed bypassing the proxy server",
      "items": {
        "type": "string",
        "description": ""
      }
    },
    "quarantineMode": {
      "oneOf": [
        {
          "type": "boolean",
          "description": "[TestCafe] enable the quarantine mode"
        },
        {
          "type": "object",
          "description": "[TestCafe] enable the quarantine mode and configure the following quarantine mode settings: successThreshold (default: 3), attemptLimit (default: 5). The value of the AttemptLimit parameter must be greater than the value of the successThreshold parameter."
        }
      ]
    },
    "reporters": {
      "type": "array",
      "description": "[TestCafe] specify the reporters and optionally files where reports are saved",
      "items": {
        "type": "object",
        "description": "reporters"
      },
      "default": [{ "name": "spec" }]
    },
    "screenshots": {
      "type": "object",
      "description": "[TestCafe] Screenshots options",
      "properties": {
        "path": {
          "type": "string",
          "description": "enable screenshot capturing and specify the path to save the screenshots to"
        },
        "takeOnFails": {
          "type": "boolean",
          "description": "take a screenshot whenever a test fails"
        },
        "pathPattern": {
          "type": "string",
          "description": "use patterns to compose screenshot file names and paths: ${BROWSER}, ${BROWSER_VERSION}, ${OS}, etc."
        },
        "fullPage": {
          "type": "boolean",
          "description": "enable full-page screenshots"
        }
      }
    },
    "selectorTimeout": {
      "type": "number",
      "description": "[TestCafe] set the amount of time within which selectors make attempts to obtain a node to be returned"
    },
    "skipJsErrors": {
      "type": "boolean",
      "description": "[TestCafe] make tests not fail when a JS error happens on a page"
    },
    "skipUncaughtErrors": {
      "type": "boolean",
      "description": "[TestCafe] ignore uncaught errors and unhandled promise rejections, which occur during test execution"
    },
    "speed": {
      "type": "number",
      "description": "[TestCafe] set the speed of test execution (0.01 ... 1)"
    },
    "src": {
      "description": "[TestCafe] Tests to run: file or glob. You can use one or more file paths or glob patterns to specify which tests to run.",
      "oneOf": [
        {
          "type": "string",
          "description": "path of the test file"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "path of the test file"
          }
        }
      ]
    },
    "ssl": {
      "type": "string",
      "description": "[TestCafe] specify SSL options to run TestCafe proxy server over the HTTPS protocol"
    },
    "stopOnFirstFail": {
      "type": "boolean",
      "description": "[TestCafe] stop an entire test run if any test fails"
    },
    "test": {
      "type": "string",
      "description": "[TestCafe] run only tests with the specified name"
    },
    "testGrep": {
      "type": "string",
      "description": "[TestCafe] run only tests matching the specified pattern"
    },
    "testMeta": {
      "type": "object",
      "description": "[TestCafe] run only tests with matching metadata"
    },
    "tsConfigPath": {
      "type": "string",
      "description": "[TestCafe] Specifies the TypeScript configuration file location"
    }
  },
  "additionalProperties": false,
  "required": [
    "src"
  ]
}
